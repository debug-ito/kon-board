# Use new container infrastructure to enable caching
sudo: false

# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work

matrix:
  include:
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default"
    addons: {apt: {packages: [libgmp-dev]}}


before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

# Download and install elm (Linux only)
- |
  if [ `uname` = "Darwin" ]
  then
    echo "TODO: support using Elm in Mac"
    false
  else
    travis_retry curl -L https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz | gunzip -c > ~/.local/bin/elm
    chmod +x ~/.local/bin/elm
  fi

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      # Add in extra-deps for older snapshots, as necessary
      #
      # This is disabled by default, as relying on the solver like this can
      # make builds unreliable. Instead, if you have this situation, it's
      # recommended that you maintain multiple stack-lts-X.yaml files.

      #stack --no-terminal --install-ghc $ARGS test --bench --dry-run || ( \
      #  stack --no-terminal $ARGS build cabal-install && \
      #  stack --no-terminal $ARGS solver --update-config)

      # Build the dependencies
      
      if [ "x$NO_PAN" = "x" ]; then export TARGETS="" ; else export TARGETS=$(find -maxdepth 1 -type d | sed s@\./@@ | grep -v '^\.' | grep -v pangraph | grep -v janusgraph-conf); fi

      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies $TARGETS
      ;;
  esac
  set +ex

script:
- |
  set -ex
  make test
  set +ex
